import cv2

# Захватываем видеопоток с веб-камеры
cap = cv2.VideoCapture(0)


# 1. ret, frame = cap.read(): В этой строке происходит чтение кадра из видеопотока, представленного объектом cap.
# Функция read() возвращает два значения: ret - флаг, указывающий на успешность чтения кадра, и frame - сам кадр.
#
# 2. if not ret:: Этот оператор проверяет значение ret.
# Если ret равно False, это означает, что возникла ошибка при чтении кадра из видеопотока.
#
# 3. print("Ошибка захвата видео"): В случае ошибки при захвате видео выводится сообщение об ошибке.
#
# 4. break: Команда break используется для выхода из цикла. После вывода сообщения об ошибке программа завершает выполнение цикла и выходит из него.
#
# Таким образом, этот код обеспечивает захват кадров из видеопотока и проверяет наличие ошибок при этом захвате.
# В случае возникновения ошибки программа выводит сообщение и завершает выполнение цикла.
while True:
    ret, frame = cap.read()

    if not ret:
        print("Ошибка захвата видео")
        break

    # Преобразуем кадр в оттенки серого
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Находим круглые объекты на изображении
    # cv2.HoughCircles(image, method, dp, minDist, param1, param2, minRadius, maxRadius)
    # dp - Разрешение обратного преобразования Хафа (dp=1 - размер изображения)
    # minDist - Минимальное расстояние между центрами найденных кругов
    # param1 - Первый параметр метода детекции кругов (чувствительность детектора)
    # param2 - Второй параметр метода детекции кругов (пороговое значение для центров круживает ругов)
    # minRadius - Минимальный радиус искомых кругов
    # maxRadius - Максимальный радиус искомых кругов
    circles = cv2.HoughCircles(gray, cv2.HOUGH_GRADIENT, dp=1, minDist=100,
                               param1=50, param2=30, minRadius=50, maxRadius=100)

    if circles is not None:
        circles = circles[0]

        for circle in circles:
            center = (int(circle[0]), int(circle[1]))  # Преобразуем координаты центра в целые числа
            radius = int(circle[2])  # Преобразуем радиус в целое число
            cv2.circle(frame, center, radius, (0, 255, 0), 2)

    # Отображаем изображение с найденными кругами
    cv2.imshow('Circle Detection', frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
